@startuml
actor Customer

participant "API Gateway" as APIG
participant "Product Service" as PS
participant "Customer Service" as CS
participant "Rental Service" as RS

== Adding a Product to Inventory ==
Customer -> APIG: POST /v1/products
APIG -> PS: addProduct(product)
PS --> APIG: Product Added
APIG --> Customer: Product Added

== Removing a Product from Inventory ==
Customer -> APIG: PATCH /v1/products/{id}
APIG -> PS: updateProductStatus(id, isAvailable=false, isDamaged=true)
PS --> APIG: Product Updated
APIG --> Customer: Product Updated

== Adding a Customer ==
Customer -> APIG: POST /v1/customers
APIG -> CS: addCustomer(customer)
CS --> APIG: Customer Added
APIG --> Customer: Customer Added

== Checking Customer Balance ==
Customer -> APIG: GET /v1/customers/{id}/balance
APIG -> CS: getCustomerBalance(id)
CS --> APIG: { balance, hasEnoughBalance }
APIG --> Customer: { balance, hasEnoughBalance }

== Renting a Product ==
Customer -> APIG: POST /v1/rentals
APIG -> RS: recordRental(productId, customerId, rentalStartDate, expectedReturnDate)
RS -> PS: validateProductAvailability(productId)
RS -> CS: validateCustomerBalance(customerId)
RS --> APIG: Rental Recorded
APIG --> Customer: Rental Details

== Listing Overdue Rentals ==
Customer -> APIG: GET /v1/rentals/overdue
APIG -> RS: getOverdueRentals()
RS --> APIG: List of Overdue Rentals
APIG --> Customer: List of Overdue Rentals

== Charging a Customer ==
Customer -> APIG: PATCH /v1/customers/{id}/charge
APIG -> CS: chargeCustomer(id, amount)
CS --> APIG: Updated Customer Balance
APIG --> Customer: Updated Customer Balance
@enduml
